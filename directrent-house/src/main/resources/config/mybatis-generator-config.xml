<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >

<generatorConfiguration>

    <!-- 使用哪个配置文件来连接数据库 -->
    <properties resource="application-${profileActive}.yml"/>

    <!-- 大家都把驱动放这里 -->
    <classPathEntry location="D:\maven-repository\mysql\mysql-connector-java\8.0.15\mysql-connector-java-8.0.15.jar"/>

    <context id="Mysql2Tables" targetRuntime="MyBatis3">
        <!-- 生成的 Java 文件的编码 -->
        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 是否去除自动生成的注释 -->
        <property name="suppressTypeWarnings" value="true"/>

        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
        <plugin type="org.mybatis.generator.plugins.CaseInsensitiveLikePlugin"/>
        <plugin type="org.mybatis.generator.plugins.RowBoundsPlugin"/>
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>
        <commentGenerator>
            <property name="suppressAllComments" value="true"/>
            <property name="suppressDate" value="true"/>
        </commentGenerator>

        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="${spring.datasource.url}"
                        userId="${spring.datasource.username}"
                        password="${spring.datasource.password}">
        </jdbcConnection>
        <!--<jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://114.55.28.2:3306/directrent_house?nullCatalogMeansCurrent=true"
                        userId="directrent"
                        password="directrent">
        </jdbcConnection>-->

        <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer true，把JDBC DECIMAL 和
            NUMERIC 类型解析为java.math.BigDecimal -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!--该元素用来控制生成的实体类-->
        <javaModelGenerator targetPackage="com.directrent.house.domain" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/><!--enableSubPackages:如果true，MBG会根据catalog和schema来生成子包。如果false就会直接用targetPackage属性 默认为false 目测好像没作用?-->
            <property name="trimStrings" value="true"/><!--是否对数据库查询结果进行trim操作，如果设置为true就会生成类似这样public void setUsername(String username) {this.username = username == null ? null : username.trim();}的setter方法。默认值为false-->
        </javaModelGenerator>

        <!--该元素用来控制生成的mapper和sql-->
        <sqlMapGenerator targetPackage="com.directrent.house.dao.mapper" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!--该元素可选，最多配置一个 如果不配置该元素，就不会生成Mapper接口 -->
        <!--type="MIXEDMAPPER" 则会使注解和xml混合方法生成代码，如果是 type="ANNOTATEDMAPPER" 则只会生成注解方式，如果是XMLMAPPER则只生成xml-->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.directrent.house.dao.mapper" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!-- 要生成实体类和mapper的表 -->
        <table tableName="house_base_info" schema="directrent_house"></table>

    </context>
</generatorConfiguration>