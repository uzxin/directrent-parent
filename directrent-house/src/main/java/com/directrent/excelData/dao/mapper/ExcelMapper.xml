<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.directrent.excelData.dao.mapper.ExcelMapper">
  <resultMap id="BaseResultMap" type="com.directrent.excelData.domain.Excel">
    <id column="house_id" jdbcType="BIGINT" property="houseId" />
    <result column="details" jdbcType="VARCHAR" property="details" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="folder" jdbcType="VARCHAR" property="folder" />
    <result column="lable" jdbcType="VARCHAR" property="lable" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="towards" jdbcType="VARCHAR" property="towards" />
    <result column="unit_type" jdbcType="VARCHAR" property="unitType" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="floor" jdbcType="VARCHAR" property="floor" />
    <result column="elevator" jdbcType="VARCHAR" property="elevator" />
    <result column="build_year" jdbcType="VARCHAR" property="buildYear" />
    <result column="door_lock_type" jdbcType="VARCHAR" property="doorLockType" />
    <result column="greening_rate" jdbcType="VARCHAR" property="greeningRate" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="config" jdbcType="VARCHAR" property="config" />
    <result column="roommate" jdbcType="VARCHAR" property="roommate" />
    <result column="price" jdbcType="VARCHAR" property="price" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    house_id, details, name, folder, lable, area, towards, unit_type, position, floor, 
    elevator, build_year, door_lock_type, greening_rate, description, config, roommate, 
    price
  </sql>
  <select id="selectByExample" parameterType="com.directrent.excelData.domain.ExcelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from excel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.directrent.excelData.domain.ExcelExample">
    delete from excel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.directrent.excelData.domain.Excel">
    insert into excel (house_id, details, name, 
      folder, lable, area, 
      towards, unit_type, position, 
      floor, elevator, build_year, 
      door_lock_type, greening_rate, description, 
      config, roommate, price
      )
    values (#{houseId,jdbcType=BIGINT}, #{details,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{folder,jdbcType=VARCHAR}, #{lable,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR}, 
      #{towards,jdbcType=VARCHAR}, #{unitType,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}, 
      #{floor,jdbcType=VARCHAR}, #{elevator,jdbcType=VARCHAR}, #{buildYear,jdbcType=VARCHAR}, 
      #{doorLockType,jdbcType=VARCHAR}, #{greeningRate,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{config,jdbcType=VARCHAR}, #{roommate,jdbcType=VARCHAR}, #{price,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.directrent.excelData.domain.Excel">
    insert into excel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="houseId != null">
        house_id,
      </if>
      <if test="details != null">
        details,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="folder != null">
        folder,
      </if>
      <if test="lable != null">
        lable,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="towards != null">
        towards,
      </if>
      <if test="unitType != null">
        unit_type,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="floor != null">
        floor,
      </if>
      <if test="elevator != null">
        elevator,
      </if>
      <if test="buildYear != null">
        build_year,
      </if>
      <if test="doorLockType != null">
        door_lock_type,
      </if>
      <if test="greeningRate != null">
        greening_rate,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="config != null">
        config,
      </if>
      <if test="roommate != null">
        roommate,
      </if>
      <if test="price != null">
        price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="houseId != null">
        #{houseId,jdbcType=BIGINT},
      </if>
      <if test="details != null">
        #{details,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="folder != null">
        #{folder,jdbcType=VARCHAR},
      </if>
      <if test="lable != null">
        #{lable,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="towards != null">
        #{towards,jdbcType=VARCHAR},
      </if>
      <if test="unitType != null">
        #{unitType,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="floor != null">
        #{floor,jdbcType=VARCHAR},
      </if>
      <if test="elevator != null">
        #{elevator,jdbcType=VARCHAR},
      </if>
      <if test="buildYear != null">
        #{buildYear,jdbcType=VARCHAR},
      </if>
      <if test="doorLockType != null">
        #{doorLockType,jdbcType=VARCHAR},
      </if>
      <if test="greeningRate != null">
        #{greeningRate,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="config != null">
        #{config,jdbcType=VARCHAR},
      </if>
      <if test="roommate != null">
        #{roommate,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.directrent.excelData.domain.ExcelExample" resultType="java.lang.Long">
    select count(*) from excel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update excel
    <set>
      <if test="record.houseId != null">
        house_id = #{record.houseId,jdbcType=BIGINT},
      </if>
      <if test="record.details != null">
        details = #{record.details,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.folder != null">
        folder = #{record.folder,jdbcType=VARCHAR},
      </if>
      <if test="record.lable != null">
        lable = #{record.lable,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.towards != null">
        towards = #{record.towards,jdbcType=VARCHAR},
      </if>
      <if test="record.unitType != null">
        unit_type = #{record.unitType,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null">
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.floor != null">
        floor = #{record.floor,jdbcType=VARCHAR},
      </if>
      <if test="record.elevator != null">
        elevator = #{record.elevator,jdbcType=VARCHAR},
      </if>
      <if test="record.buildYear != null">
        build_year = #{record.buildYear,jdbcType=VARCHAR},
      </if>
      <if test="record.doorLockType != null">
        door_lock_type = #{record.doorLockType,jdbcType=VARCHAR},
      </if>
      <if test="record.greeningRate != null">
        greening_rate = #{record.greeningRate,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.config != null">
        config = #{record.config,jdbcType=VARCHAR},
      </if>
      <if test="record.roommate != null">
        roommate = #{record.roommate,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update excel
    set house_id = #{record.houseId,jdbcType=BIGINT},
      details = #{record.details,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      folder = #{record.folder,jdbcType=VARCHAR},
      lable = #{record.lable,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=VARCHAR},
      towards = #{record.towards,jdbcType=VARCHAR},
      unit_type = #{record.unitType,jdbcType=VARCHAR},
      position = #{record.position,jdbcType=VARCHAR},
      floor = #{record.floor,jdbcType=VARCHAR},
      elevator = #{record.elevator,jdbcType=VARCHAR},
      build_year = #{record.buildYear,jdbcType=VARCHAR},
      door_lock_type = #{record.doorLockType,jdbcType=VARCHAR},
      greening_rate = #{record.greeningRate,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      config = #{record.config,jdbcType=VARCHAR},
      roommate = #{record.roommate,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.directrent.excelData.domain.ExcelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from excel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="getByFolder" resultType="com.directrent.excelData.domain.Excel">
    select <include refid="Base_Column_List" /> from excel where folder = #{folder}
  </select>
  <insert id="batchInsert" parameterType="java.util.List" >
    INSERT INTO excel (<include refid="Base_Column_List" />)
    VALUES
    <foreach collection="list" item="item" index="index" separator="," >
      (#{item.houseId},#{item.details},#{item.name},#{item.folder},#{item.lable},
      #{item.area},#{item.towards},#{item.unitType},#{item.position},
      #{item.floor},#{item.elevator},#{item.buildYear},#{item.doorLockType},#{item.greeningRate},
      #{item.description},#{item.config},#{item.roommate},#{item.price})
    </foreach>
  </insert>
</mapper>